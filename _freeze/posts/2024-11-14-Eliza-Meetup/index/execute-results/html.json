{
  "hash": "eaec4e46cfed46b88bc61a88f9564b27",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Pizza and Chatbots: Wouldn't It Be Loverly!- Meeting ELIZA\"\ndescription: \"Sharing about a data event hosted at SUNY-Old Westbury.\"\nauthor: Joe Sferra\ndate: 11-14-2024\ncategories: [Python, AI]\nimage: mfl.gif\ndraft: false\n---\n\n![](/posts/2024-11-14-Eliza-Meetup/mfl.gif)   \n\n## Meeting Eliza\n\nYesterday, I attended the second in a series of yearly events hosted by SUNY-Old Westbury. Professors and students from computer science, math, physics, and other areas came together to learn about the first chatbot, ELIZA, and see how the code in Python would work. Professor Frank Sanacory took us through ELIZA and we learned a lot!\n\nImagine being able to use a computer like a therapist. You type in things about what you're feeling, and the computer responds in ways that a mental health professional might: asking you questions, prompting you to clarify or elaborate on what you've already said. This approach was pioneered by Joseph Weizenbaum in the 1960s. Take a look at a representative conversation from ELIZA (Eliza's responses are in all caps).\n\n>Men are all alike.\n>\n>IN WHAT WAY?\n>\n>They're always bugging us about something or other.\n>\n>CAN YOU THINK OF A SPECIFIC EXAMPLE?\n>\n>Well, my boyfriend made me come here.\n>\n>YOUR BOYFRIEND MADE YOU COME HERE?\n>\n>He says I'm depressed much of the time.\n>\n>I AM SORRY TO HEAR YOU ARE DEPRESSED.\n>\n>It's true.\n>I am unhappy.\n>\n>DO YOU THINK COMING HERE WILL HELP YOU NOT TO BE UNHAPPY.\n>\n>I need some help, that much seems certain.\n>\n>WHAT WOULD IT MEAN TO YOU IF YOU GOT SOME HELP?\n>\n>Perhaps I could learn to get along with my mother.\n>\n>TELL ME MORE ABOUT YOUR FAMILY.\n>\n>My mother takes care of me.\n>\n>WHO ELSE IN YOUR FAMILY TAKES CARE OF YOU?\n>\n>My father.\n>\n>YOUR FATHER?\n>\n>You are like my father in some ways.\n>\n>WHAT RESEMBLANCE DO YOU SEE?\n>\n>You are not very aggressive, but I think you don't want me to notice that.\n>\n>WHAT MAKES YOU THINK I AM NOT VERY AGGRESSIVE?\n>\n>You don't argue with me.\n>\n>WHY DO YOU THINK I DON'T ARGUE WITH YOU?\n>\n>You are afraid of me.\n>\n>DOES IT PLEASE YOU TO BELIEVE I AM AFRAID OF YOU?\n>\n>My father is afraid of everybody.\n>\n>WHAT ELSE COMES TO YOUR MIND WHEN YOU THINK OF YOUR FATHER?\n>\n>Bullies.\n>\n>DOES THAT HAVE ANYTHING TO DO WITH THE FACT\n>THAT YOUR BOYFRIEND MADE YOU COME HERE?\n\n*Weizenbaum, Joseph \"ELIZA â€“ A Computer Program For the Study of Natural Language Communication Between Man and Machine\" in: Communications of the ACM; Volume 9, Issue 1 (January 1966): p 36-45.* \n\n## Rules for Interacting\n\nThere's a story that I can't find online anymore about how the great opera singer Enrico Caruso had to pass himself off as knowing a lot more languages than he actually knew to make it in the opera world, so he would just parrot the last few words anyone said to him in a conversation to make it seem like he knew what was going on. Not the most bracing chat, but it would do in a pinch.\n\n!['I'm tired so I'm taking the rest of the night off.' 'Taking the rest of the night off, huh?'](/posts/2024-11-14-Eliza-Meetup/caruso.png)    \n\nCaruso's strategy was a basic rule to respond to other people talking without giving away that he didn't really know what was going on. Start stacking a few rules like this on top of each other and you get a chatbot. With some time with this dialogue, we could brainstorm some of the patterns and functions that ELIZA uses to respond to input in a human-like way:  \n\n- When a user says \"always,\" ask them to give you an example.  \n- When a user mentions their family, ask them to tell you more about their family.  \n- If the user says a phrase with \"I\" or \"you\", flip it to \"you\" or \"I\" and rephrase it back.  \n\nThere's obviously a lot more going on here, but we can already see some steps falling into place with these guidelines. \n\n## Why Eliza?\n\nBefore we talk a little Python, I have to briefly tell you about why this chatbot was named ELIZA. \"She\" is named for Eliza Doolittle, the filthy cockney flower salesgirl in George Bernard Shaw's \"Pygmalion\", who through a grueling series of speaking exercises led by Dr. Henry Higgins, passes herself off at a high-society ball as a Hungarian princess. In the same way that her repeated exercises made her a better speaker, Weizenbaum noticed that repeated use and input from multiple users refined ELIZA's performance in a similar way. I know Eliza Doolittle from the musical adaptation, \"My Fair Lady\"- notice her incredible transformation throughout!\n\n![](/posts/2024-11-14-Eliza-Meetup/mfl2.gif)  \n![](/posts/2024-11-14-Eliza-Meetup/mfl3.gif)  \n![](/posts/2024-11-14-Eliza-Meetup/mfl4.gif)  \n**I'll take any excuse to fawn over Audrey Hepburn.**\n\n## Preliminary Python- String Manipulation\nProfessor Sanacory took us through some of the Python we would need to make our own version of Eliza. We have to really get right with string manipulation, as the human input will be typed in in a string format. Two techniques he suggested included making all your code only deal with lowercase text and changing the user input to lowercase before you do anything with it. Another technique is to take the human input and break it up into a list of words so you can isolate words that would cue the bot like \"family\", \"father\", \"always\", \"I\", \"you\", or others!\n\n::: {#fd989980 .cell execution_count=1}\n``` {.python .cell-code}\nimport string\n\ndef lower_split(mystring):\n  # Takes in string input from human. \n  # Converts to lowercase, removes punctuation, then \n  # splits into a list of strings representing each word\n  \n  mystring = mystring.lower()\n  nopunct = mystring.translate(str.maketrans('', '', string.punctuation))\n  print(nopunct.split(\" \"))\n\nlower_split(\"I LOve My FaIr LADY.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['i', 'love', 'my', 'fair', 'lady']\n```\n:::\n:::\n\n\nYou can start imagining next steps, right? Eliminating redundant spaces, keeping question marks in the input, and overall, working to standardize the input as much as possible so differences between how different people type get flattened out.\n\n## Next Steps?  \n\nI'm not just going to copy and paste the bot code in here. That wouldn't be fun. I want to sit with the code we looked at yesterday and try to make it my own. I think it would be fun to make a bot that responds not like Eliza Doolittle, but Henry Higgins, the flamboyant and impatient bachelor flinging insults, asking for his slippers, and criticizing any of your mistakes in written English. Or a chatbot that isn't particularly good at his job, peppering in truisms like \"It is what it is.\" or \"That's showbiz, baby.\" My wife mentioned that the ELIZA exchange sounded like a Meisner technique acting exercise where actors repeat each other's words, so maybe there's something in there to explore too. I have a couple other projects going on, so this will probably have to wait for Christmas break, but it's always fun to start thinking about a new project!\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}