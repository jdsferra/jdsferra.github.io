---
title: "Portfolio"
---
Check out my projects, detailing proficiency in data visualization, predictive modeling, Python, R, and SQL.

## Understanding The Magnificent Seven

Interactive dashboard in R/Shiny examining the "Magnificent Seven" stocks while comparing their performance to the S&P 500. While avoiding giving investing advice, I illustrate the Seven's outsize share of the S&P's total market cap, suggesting that these companies' performances (boosted by Covid-19 and the craze for AI) are inflating the S&P's overall performance.

In the app, you can customize several visualizations of the Mag7 stocks and their performance compared to the S&P.
  
![ ](/assets/mag7/mag7_homepage.png){width=100% height=100% fig-align="left"} 

![Monthly averaged price data from 2015 to 2024.](/assets/mag7/mag7_fig1.png){width=100% height=100% fig-align="left"}

![Percent change in META price compared to the S&P 500 from 2022 to present. Both values were negative until early 2024.](/assets/mag7/mag7_fig2.png){width=100% height=100% fig-align="left"}     

![At year end of 2023, the Seven accounted for a quarter of the S&P 500's $47.7 trillion market cap.](/assets/mag7/mag7_fig5.png){width=100% height=100% fig-align="left"}  

![Bar chart of S&P 500's market cap from year-end 2014. The considerable contraction in 2022 is part of a larger stock market decline in 2022 due to the aftermath of Covid and the Russian invasion of Ukraine.](/assets/mag7/mag7_fig6.png){width=100% height=100% fig-align="left"}       

The app is hosted [here](https://jdsferra.shinyapps.io/Magnificent7/), the code is [here](https://github.com/jdsferra/MAGNIFICENT7), and a blog post discussing the project in further detail is [here](https://nycdatascience.com/blog/student-works/understanding-the-magnificent-seven-stocks/).

My talk begins at 0:36.     
{{< video https://www.youtu.be/watch?v=YA7wAn-CGq8?si=NiRKKXjWDgRHdrP 
    title='Start at :36' >}}

## Predicting Real Estate Prices Using Machine Learning
Implemented multiple machine learning models in Python and Scikit-learn to predict house prices using the Ames dataset from Kaggle. The process involved data cleaning and preparation, feature engineering, preprocessing, and modeling. Models included Linear Regression, Penalized Linear Regression, Support Vector Machines, Random Forests, and Gradient Boosting.

My approach highlighted the trade-offs between accuracy and interpretability in ML models. Multiple Linear Regression was my endpoint of interpretability over accuracy, while Gradient Boosting was my endpoint of accuracy over interpretability. By doing a deep dive on these two models, I illustrate the endpoints of accessibility and accuracy in order to inform realtors and home buyers and sellers about the best ways to approach the real estate market. My analysis suggests that big factors like square footage and number of bedrooms and bathrooms factors into home prices, but preparing the data with subtler interactions like "rooms multiplied by bedrooms" can help ML models discover deeper differences between similar homes and yield more accurate sale price predictions.

![As ML models increase in accuracy, they decrease in interpretability, and vice versa.](/assets/ames/ames_tradeoff.png){width=100% height=100% fig-align="left"}

![Simple Linear Regression: Highly Interpretable, but less accurate than other models.](/assets/ames/ames_SLR.png){width=100% height=100% fig-align="left"}   

![Gradient Boosting: Highly Accurate, but less interpretable than other models.](/assets/ames/ames_boosting.png){width=100% height=100% fig-align="left"} 

My code can be found [here](https://github.com/jdsferra/AMES) and a blog post discussing the project in further detail is [here](https://nycdatascience.com/blog/student-works/the-notebook-and-the-black-box-ml-in-ames/).

My talk begins at 0:35.
{{< video https://www.youtube.com/watch?v=y8DqPNRe7_U >}}

## Words to Learn to Solve the New York Times Crossword Puzzle
This analysis is targeted towards people who have done some crossword puzzles but want to take their efforts more seriously and improve their game. While simply practicing doing crossword puzzles consistently is obviously a great way to improve, analysis on a [dataset](https://www.kaggle.com/datasets/darinhawley/new-york-times-crossword-clues-answers-19932021) containing all the clues and answers from NYT puzzles between 1993-2021 reveals some trends about the words that commonly feature so that players can study them away from the puzzles and speed up their improvement.

After some descriptive analysis of the dataset using Python, including examining missing values and some feature engineering involving word length, days of the week, and vowel ratios of the words. After briefly analyzing the most-common clues, I make a list of the most commonly-featured words in these puzzles. This list isn't a great study tool, though, because a lot of these words are already known to the average English-language speaker.

So, I cross-reference this list with a second [list](https://www.wordfrequency.info/samples.asp), 5,050 of the most common and currently-used words in the English language. By eliminating these words from the puzzle list, I create a valuable study guide: a list of words that are both common in the NYT Crossword puzzle, but are perhaps not known to the average person starting out.
![ ](/assets/crosswords/crosswords_page1.png){width=100% height=100% fig-align="left"} 
![ ](/assets/crosswords/crosswords_page2.png){width=100% height=100% fig-align="left"} 
My code can be found [here](https://github.com/jdsferra/Crosswords) and a blog post discussing the project in further detail is [here](https://nycdatascience.com/blog/student-works/words-to-learn-to-solve-the-new-york-times-crossword/).

*Thanks for taking a look!*
    